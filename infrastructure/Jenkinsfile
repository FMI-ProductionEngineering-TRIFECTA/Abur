pipeline {
    agent any

    tools {
        jdk 'jdk21'
    }

    environment {
        DOCKER_CREDENTIALS = credentials("docker_credentials")
        GITHUB_TOKEN = credentials("github_token")
        GITHUB_ORGANIZATION_USERNAME = "FMI-ProductionEngineering-TRIFECTA"
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Push to Docker Hub') {
              steps {
                    script {
                        sh([script: 'git fetch --tag', returnStdout: true]).trim()
                        env.MAJOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 1', returnStdout: true]).trim()
                        env.MINOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 2', returnStdout: true]).trim()
                        env.PATCH_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 3', returnStdout: true]).trim()
                        env.IMAGE_TAG = "${env.MAJOR_VERSION}.\$((${env.MINOR_VERSION} + 1)).${env.PATCH_VERSION}"

                        sh """
                            git tag ${env.IMAGE_TAG}
                            git push https://${GITHUB_TOKEN}@github.com/${GITHUB_ORGANIZATION_USERNAME}/Abur.git ${env.IMAGE_TAG}
                            docker build -t ${DOCKER_CREDENTIALS_USR}/hello-img:${env.IMAGE_TAG} .
                            docker login -u ${DOCKER_CREDENTIALS_USR} -p ${DOCKER_CREDENTIALS_PSW} docker.io
                            docker push ${DOCKER_CREDENTIALS_USR}/hello-img:${env.IMAGE_TAG}
                        """
                    }
              }
        }

        stage('Debug') {
            steps {
                sh 'which docker'
                sh 'docker --version'
                sh 'docker compose version || docker-compose version || echo "No compose installed"'
            }
        }

        stage('Get image from Docker Hub') {
            steps {
                sh """
                    IMAGE_TAG=${env.IMAGE_TAG} docker compose up -d hello mongo
                """
            }
        }
    }
}
