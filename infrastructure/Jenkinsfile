pipeline {

    agent any

    tools {
        jdk 'jdk21'
    }

    environment {
        DOCKER_CREDENTIALS = credentials("docker_credentials")
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Push to Docker Hub') {
              steps {
                    script {
                        GIT_TAG = sh([script: 'git fetch --tag && git tag', returnStdout: true]).trim()
                        MAJOR_VERSION = sh([script: 'git tag | cut -d . -f 1', returnStdout: true]).trim()
                        MINOR_VERSION = sh([script: 'git tag | cut -d . -f 2', returnStdout: true]).trim()
                        PATCH_VERSION = sh([script: 'git tag | cut -d . -f 3', returnStdout: true]).trim()

                        def NEW_MINOR = (MINOR_VERSION.toInteger() + 1).toString()
                        IMAGE_VERSION = "${MAJOR_VERSION}.${NEW_MINOR}.${PATCH_VERSION}"

                        sh """
                            docker build -t ${DOCKER_CREDENTIALS_USR}/hello-img:${IMAGE_VERSION} .
                            docker login -u ${DOCKER_CREDENTIALS_USR} -p ${DOCKER_CREDENTIALS_PSW} docker.io
                            docker push ${DOCKER_CREDENTIALS_USR}/hello-img:${IMAGE_VERSION}
                        """
                    }
              }
        }
    }

}
